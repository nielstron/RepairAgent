
   {
       "file_name": "org/apache/commons/math3/util/FastMath.java",
       "insertions": [
           {
               "line_number": 313,
               "new_lines": [
                   "            if (y > TWO_POWER_52 || y < -TWO_POWER_52) {",
                   "                return Double.NaN; // Return NaN for out of range values",
                   "            }"
               ]
           }
       ],
       "deletions": [],
       "modifications": []
   }
   
   
   
   
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
{
    "file_name": "org/apache/commons/math3/util/FastMath.java",
    "insertions": [
        {
            "line_number": 313,
            "new_lines": [
                "            if (y <= TWO_POWER_52 || y >= -TWO_POWER_52) {",
                "                return Double.NaN; // Return NaN for out of range values",
                "            }"
            ]
        }
    ],
    "deletions": [],
    "modifications": []
}
    
    
{
    "fixes": [
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y > TWO_POWER_52 || y < -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y > TWO_POWER_52 || y < -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y <= TWO_POWER_52 || y >= -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y <= TWO_POWER_52 || y >= -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y == TWO_POWER_52 || y == -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y == TWO_POWER_52 || y == -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y != TWO_POWER_52 && y != -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y != TWO_POWER_52 && y != -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y > TWO_POWER_52 && y < -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        },
        {
            "file_name": "org/apache/commons/math3/util/FastMath.java",
            "insertions": [
                {
                    "line_number": 313,
                    "new_lines": [
                        "            if (y > TWO_POWER_52 && y < -TWO_POWER_52) {",
                        "                return Double.NaN; // Return NaN for out of range values",
                        "            }"
                    ]
                }
            ]
        }
    ]
}
{
    "fixes": [
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y < 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == Double.POSITIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == Double.NEGATIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != Double.POSITIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != Double.NEGATIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y < 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y == 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y == 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y > 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y < 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y == Double.POSITIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y == Double.NEGATIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y > 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y < 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y == 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y != 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == Double.POSITIVE_INFINITY || y < 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == Double.NEGATIVE_INFINITY || y > 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != Double.POSITIVE_INFINITY || y == 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != Double.NEGATIVE_INFINITY || y == 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 1 || y < 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 0 || y < 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 1 || y > 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != 1 || y == 0) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 0 || y != 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
        {"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y < 0 || y == 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) && Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 0 && Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y < 0 && Double.isNaN(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y != 0 && Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 0 || Double.isNaN(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y == 1 && Double.isNaN(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y < 1 && Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || y > 1 || Double.isInfinite(y)) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y == Double.POSITIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y == Double.NEGATIVE_INFINITY) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y > 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y < 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isInfinite(y) || y == 1) {", "                return Double.NaN; // Return NaN for out of range values", "            }"]}]},
   	{"file_name": "org/apache/commons/math3/util/FastMath.java", "insertions": [{"line_number": 313, "new_lines": ["            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52 || Double.isNaN(y) || y != 1) {", "                return Double.NaN; // Return NaN for out of range values", "