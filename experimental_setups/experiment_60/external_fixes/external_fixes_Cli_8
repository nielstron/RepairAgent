{
    "812": "            pos = findWrapPos(text, width, nextLineTabStop) - 1;"
}{    }
{     }{
	"fix1": {
		"812": "pos = findWrapPos(text, width, 0);",
		"813": "if (pos == -1) { sb.append(rtrim(text)); return sb; }",
		"814": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
		"815": "final String padding = createPadding(nextLineTabStop);",
		"816": "while (true) {",
		"817": "text = padding + text.substring(pos).trim();",
		"818": "pos = findWrapPos(text, width, nextLineTabStop);",
		"819": "if (pos == -1) { sb.append(text); return sb; }",
		"820": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
	},
	"fix2": {
		"812": "pos = findWrapPos(text, width, 0);",
		"813": "if (pos == -1) { sb.append(rtrim(text)).append(defaultNewLine); return sb; }",
		"814": "//sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
		"815": "final String padding = createPadding(nextLineTabStop);",
		"816": "while (true) {",
		"817": "text = padding + text.substring(pos).trim();",
		"818": "pos = findWrapPos(text, width, nextLineTabStop);",
		"819": "if (pos == -1) { sb.append(text); return sb; }",
		"820": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
	},
	"fix3": {
		"812": "pos = findWrapPos(text, width, 0);",
		"813": "if (pos == -1) { sb.append(rtrim(text)); return sb; }",
		"814": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
		"815": "//final String padding = createPadding(nextLineTabStop);",
		"816": "while (true) {",
		"817": "text = padding + text.substring(pos).trim();",
		"818": "pos = findWrapPos(text, width, nextLineTabStop);",
		"819": "if (pos == -1) { sb.append(text); return sb; }",
		"820": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
	}
}
{ "812": "pos = findWrapPos(text, width, nextLineTabStop);", "813": "if (pos == -1) { sb.append(rtrim(text)); return sb; }", "814": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);", "815": "final String padding = createPadding(nextLineTabStop);", "816": "while (true) {", "817": "text = padding + text.substring(pos).trim();", "818": "pos = findWrapPos(text, width, nextLineTabStop);", "819": "if (pos == -1) { sb.append(text); return sb; }", "820": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 1);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 4);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 1);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 1);" }
{
  "812": "pos = findWrapPos(text, width, nextLineTabStop - 1);"
}
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 4);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 4);" }
{ "812": "pos = findWrapPos(text, width, 0);" }
{ "812": "pos = findWrapPos(text, width, nextLineTabStop - 1);" }
{  
    "812": "pos = findWrapPos(text, width, nextLineTabStop);"
}
{  
    "812": "pos = findWrapPos(text, width, nextLineTabStop);",
    "813": "if (pos == -1) { sb.append(rtrim(text)); return sb; }",
    "814": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
    "815": "final String padding = createPadding(nextLineTabStop);",
    "816": "while (true) {",
    "817": "text = padding + text.substring(pos).trim();",
    "818": "pos = findWrapPos(text, width, nextLineTabStop);",
    "819": "if (pos == -1) { sb.append(text); return sb; }",
    "820": "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
}