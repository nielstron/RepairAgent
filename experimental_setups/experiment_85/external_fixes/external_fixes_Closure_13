
{  
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#126": "        // Some new code here to fix the bug",
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#128": "        // Some new code here to fix the bug"
}{  
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#126": " // traverse(c); // Commenting out the original line to investigate the bug further",
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#127": "Node next = c.getNext();",
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#128": "c = next;"
}{   
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#126": "        // Commenting out the line traverse(c);",
    "com/google/javascript/jscomp/PeepholeOptimizationsPass.java#128": "        // Commenting out the line c = next;"
}{ "126": "if(!shouldVisit(node)){return;}", "127": "int visits = 0;", "128": "do { Node c = node.getFirstChild(); while (c != null) { traverse(c); Node next = c.getNext(); c = next; } visit(node); visits++; Preconditions.checkState(visits < 10000, \"too many iterations\"); } while (shouldRetraverse(node)); exitNode(node);" }{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }
{  
    "126": "if(!shouldVisit(node)){return;}",  
    "127": "Node next = c.getNext();",  
    "128": "c = next;"  
}
{  
    "126": "if(!shouldVisit(node)){return;}",  
    "127": "Node next = c.getNext();",  
    "128": "c = next;"  
}
{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }
{  
    "126": "if(!shouldVisit(node)){return;}",  
    "127": "Node next = c.getNext();",  
    "128": "c = next;"  
}
{  
    "126": "if(!shouldVisit(node)){return;}",  
    "127": "Node next = c.getNext();",  
    "128": "c = next;"  
}
{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }
{  
    "126": "if(!shouldVisit(node)){return;}",  
    "127": "Node next = c.getNext();",  
    "128": "c = next;"  
}{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }{
  "suggested_fixes": [
    {
      "126": "if(!shouldVisit(node)){return;}",
      "127": "Node next = c.getNext();",
      "128": "c = next;"
    },
    {
      "126": "if(!shouldVisit(node)){return;}",
      "127": "Node next = c.getNext();",
      "128": "c = next;"
    }
  ]
}
{ 
  "126": "if(!shouldVisit(node)){return;}", 
  "127": "Node next = c.getNext();", 
  "128": "c = next;" 
}
{ 
  "126": "if(!shouldVisit(node)){return;}", 
  "127": "Node next = c.getNext();", 
  "128": "c = next;" 
}{ "126": "if(!shouldVisit(node)){return;}", "127": "Node next = c.getNext();", "128": "c = next;" }