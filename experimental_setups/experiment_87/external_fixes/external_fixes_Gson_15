{
    "com/google/gson/stream/JsonWriter.java#495": "if (Double.isNaN(value) || Double.isInfinite(value) || Double.isFinite(value)) {"
}{
    "495": "if (Double.isNaN(value) || Double.isInfinite(value) || Double.isInfinite(value) || Double.isInfinite(value) || Double.isInfinite(value)) {"
}
{
                                                                                                       { "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values", "496": "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value); // Keeping the error message" }
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values", "496": "throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value); // Keeping the error message" }
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }
{ 
  "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values"
}
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }
{ "495": "if (!Double.isFinite(value)) { // Check for non-finite values and handle accordingly" }  
   
{
  "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values"
}
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }{
    "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values"
}
{ "495": "if (Double.isNaN(value)) { // Check for NaN only, removing the check for infinite values" }