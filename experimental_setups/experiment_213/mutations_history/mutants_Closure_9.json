[{"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["    String normalizedFileName = normalizeSourceName(script.getSourceFileName());"]}], "deletions": [], "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizedFileName);"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(script.getSourceFileName());"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(script.getSourceFileName().replace(\"\\\\\", \"/\"));"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replace(\"\\\\\", \"/\")));"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));"]}, {"line_number": 184, "new_lines": ["      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit());"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));"]}, {"line_number": 183, "new_lines": ["      moduleName = moduleName.replace(\"\\\\\", \"/\");"]}, {"line_number": 184, "new_lines": ["      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit());"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replace(\"\\\\\", \"/\")));"]}, {"line_number": 183, "new_lines": ["      moduleName = moduleName.replace(\"\\\\\", \"/\");"]}, {"line_number": 184, "new_lines": ["      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit());"]}], "deletions": [], "modifications": []}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"bar\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"baz\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"foo/bar\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"bar/baz\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"bar\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"baz\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"foo/bar\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["        if (moduleName.contains(\"foo\")) {", "            moduleName = moduleName.replace(\"foo\", \"bar/baz\");", "        }"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 182, "new_lines": ["          // Mutant 1: Adding a comment here"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName())); // Mutant 2: Changing variable assignment"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName()); // Mutant 3: Removing normalizeSourceName method call"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName()); // Mutant 4: Removing normalizeSourceName method call"}, {"line_number": 184, "modified_line": "      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit()); // Mutant 4: Fixing syntax"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName().replace(\"\\\\\", \"/\")); // Mutant 5: Adding replace method call"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "deletions": [183]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      // Mutant 7: Adding a new line here"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 184, "modified_line": "      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit())); // Mutant 8: Fixing syntax"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName())); // Mutant 9: Adding normalizeSourceName method call"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName().replaceAll(\"\\\\.\", \"/\")); // Mutant 10: Changing replaceAll method call"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName().replace(\"\\\\\", \"/\")); // Mutant 11: Changing replace method call"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 183, "new_lines": ["      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName())); // Mutant 12: Adding normalizeSourceName method call"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName()); // Mutant 13: Removing normalizeSourceName method call"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName()); // Mutant 14: Removing normalizeSourceName method call"}, {"line_number": 184, "modified_line": "      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit()); // Mutant 14: Fixing syntax"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "insertions": [{"line_number": 119, "new_lines": ["    String normalizedFileName = normalizeSourceName(script.getSourceFileName());"]}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizedFileName);"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(script.getSourceFileName());"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName())) + \"\";"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName())) + \"suffix\";"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replace(\"\\\\\", \"/\")));"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replaceAll(\"\\\\\\\\\", \"/\")));"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replace(\"\\\\\", \"/\").replace(\"foo\", \"bar\")));"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 183, "modified_line": "      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName().replace(\"foo\", \"bar\").replace(\"\\\\\", \"/\")));"}]}, {"file_name": "com/google/javascript/jscomp/ProcessCommonJSModules.java", "modifications": [{"line_number": 184, "modified_line": "      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit()).copyInformationFromForTree(script).replaceWithFirstChild());"}]}]